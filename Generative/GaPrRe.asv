X_tweets = train_inputs(:,22:2021);
X_demo = train_inputs(:,1:21);
[coeff, score, latent, tsquared, explained] = pca(X_tweets);
X_tweets_reduced = score(:,1:20);
X = [X_demo, X_tweets];
X = train_inputs;

numtrPoints = size(train_inputs,1); 

[trainInd, valInd, testInd] = divideblock(numtrPoints, 0.7, 0.2, 0.1);
training_labels = train_labels(trainInd,:);
val_labels = train_labels(valInd,:);
test_labels = train_labels(testInd,:);
numtrLabels = size(train_labels,2);
predLabels_train = zeros(size(training_labels));
predLabels_val = zeros(size(val_labels));
predLabels_test = zeros(size(test_labels));
training_data = train_inputs(trainInd,:);
validation_data = train_inputs(valInd,:);
testing_data = train_inputs(testInd,:);
for i=1:numtrLabels
    train_labels_i = training_labels(:,i);
    gprMdl = fitrgp(training_data, train_labels_i);
    predLabels_train(:,i) = resubPredict(gprMdl);
    predLabels_val(:,i) = predict(gprMdl,validation_data);
    predLabels_test(:,i) = predict(gprMdl,testing_data);
end
train_error = error_metric(predLabels_train,training_labels);
val_error = error_metric(predLabels_val, val_labels);
test_error = error_metric(predLabels_test, test_labels);